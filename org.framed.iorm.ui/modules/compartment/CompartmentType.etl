import "CardinalityParser.eol";

/**
 * Transforms a shape with type COMPARTMENT_TYPE.
 */
@lazy
rule CompartmentType
	transform s : source!Shape
	to t : target!CompartmentType {
	guard : s.getType==(source!Type#CompartmentType) 
	
	var children = s.getModel();
	if (not (children == null)) {
		// iterate over all children of the compartment type	
		for (elem : source!ModelElement in children.elements) {
			elem.~features = s.~features;
			elem.~parent = s.~parent;
			var e = elem.equivalent();
			
			if (e == null) { continue; }
			if (e.instanceOf(target!CompartmentType)) {	//COMPARTMENT_TYPE
				t.getContains.add(e);
				if(not(s.~features.get("Contains_Compartments"))) t.getContains.remove(e);
			} else if ( e.instanceOf(Sequence(target!Fulfillment))) {		//FULFILLMENT
				for(ob in e) {	
					t.getFulfillments.add(ob);
				}	
			}
		}
	}
	
	t.name = s.name;
}

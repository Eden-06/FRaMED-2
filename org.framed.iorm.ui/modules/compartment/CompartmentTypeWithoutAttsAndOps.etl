import "CompartmentType.etl";

/**
 * Transforms a compartment type when attributes and operation are not enabled
 */
@abstract 
rule CompartmentTypeWithoutAttAndOps
	transform s : source!Shape
	to t : target!CompartmentType
	extends CompartmentType {
		//feature Compartment_Behavior implies feature Compartment_Properties and Compartment_Structure (not to check)	
		guard : not(s.~features.get("Compartment_Behavior"))
}
@abstract
@lazy 
rule RoleConstraint
	transform t : source!Relation
	to n : target!RoleConstraint {	
	n.first ::= t.source;
	n.second ::= t.target;	
}

// RoleImplication
@lazy 
rule RoleImplication
	transform s : source!Relation
	to t : target!RoleImplication 
	extends RoleConstraint {
	guard : s.getType==(source!Type#RoleImplication) and
			s.~features.get("Role_Implication") 
}

// RoleProhibition
@lazy 
rule RoleProhibition
	transform s : source!Relation
	to t : target!RoleProhibition 
	extends RoleConstraint {
	guard : s.getType==(source!Type#RoleProhibition) and
			s.~features.get("Role_Prohibition") 
}

// RoleEquivalence
@lazy 
rule RoleEquivalence
	transform s : source!Relation
	to t : target!RoleEquivalence 
	extends RoleConstraint {
	guard : s.getType==(source!Type#RoleEquivalence) and
			s.~features.get("Role_Equivalence")
}
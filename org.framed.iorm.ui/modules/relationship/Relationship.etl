/*
 * The abstract rule for relationship executes all actions done for all relationships with and without 
 * cardinalities.
 */
@abstract 
rule Relationship
	transform s : source!Relation
	to t : target!Relationship {
		guard : s.~features.get("Relationships") and
				s.getType==(source!Type#Relationship) and
				not(s.getSource().getContainer().getParent() == null) and
				s.getSource().getContainer().getParent().getType==(source!Type#CompartmentType)	
				
		//set the transformed target element to ensure the subrule work on the same target and only transform once
 		if(s.~transformed == null) {
	 		s.~transformed = t;
			//set name
			s.~transformed.name = s.name;
			
			//get the crom equivalent to compartment type the relationship is in
			var compartmentType = s.getContainer.getParent().equivalent();
			//set the inter relationship constraints
			s.getSource.~features = s.~features;
			s.getSource.equivalent().getOutgoing.add(s.~transformed);
			s.getTarget.~features = s.~features;
			s.getTarget.equivalent().getIncoming.add(s.~transformed);	
			//add the relationship to the compartment type the relationship is in
			compartmentType.getRelationships().add(s.~transformed);
		}
}
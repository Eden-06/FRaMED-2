@lazy 
rule TotalRelation
	transform s : source!Relation
	to t : target!Total {
	guard : s.getType==(source!Type#Total) and 
			// feature Intra_Relationship_Constraints implies feature Relationship_Constraints (not to check)
			s.~features.get("Intra_Relationship_Constraints")
}

@lazy 
rule CyclicRelation
	transform s : source!Relation
	to t : target!Cyclic {
		guard : s.getType==(source!Type#Cyclic) and 
				// feature Intra_Relationship_Constraints implies feature Relationship_Constraints (not to check)
				s.~features.get("Intra_Relationship_Constraints") 
}  

@lazy 
rule IrreflexiveRelation
	transform s : source!Relation
	to t : target!Irreflexive {
	guard : s.getType==(source!Type#Irreflexive) and 
			// feature Intra_Relationship_Constraints implies feature Relationship_Constraints (not to check)
			s.~features.get("Intra_Relationship_Constraints") 
			
} 

@lazy 
rule AcyclicRelation
	transform s : source!Relation
	to t : target!Acyclic {
	guard : s.getType==(source!Type#Acyclic) and 
			// feature Intra_Relationship_Constraints implies feature Relationship_Constraints (not to check)
			s.~features.get("Intra_Relationship_Constraints") 
} 

@lazy 
rule ReflexiveRelation
	transform s : source!Relation 
	to t : target!Reflexive {
	guard : s.getType==(source!Type#Reflexive) and 
			// feature Intra_Relationship_Constraints implies feature Relationship_Constraints (not to check)
			s.~features.get("Intra_Relationship_Constraints")
} 
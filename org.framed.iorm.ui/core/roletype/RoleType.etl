import "Type.etl";

//TODO doku aus compartment.etl
pre RoleType {
	var roleTypes : OrderedSet(source!Shape);
}

/**
 * Transforms a shape with type ROLE_TYPE.
 */
 @lazy 
rule RoleType
	transform s : source!Shape
	to t : target!RoleType {
	guard : s.getType==(source!Type#RoleType) 

	t.name = s.name;
	
	roleTypes.add(s);
}

/**
 * Add operations and attributes in the post processing step.
 *
 * This separation is necessary as the type references in attributes and operations may form cycles between
 * types/shapes. The post block ensures that these cycles can be resolved.
 */
post RoleType {
	for (s : source!Shape in roleTypes) {
		var t = s.equivalent();

		if (not t.isDefined() or not s.isDefined()) {
			continue;
		}

		if(s.~features.get("Role_Behavior")) { //feature Role_Behavior implies feature Role_Properties and Role_Structure (not to check)
			s.addAttributes(t);
			s.addOperations(t);
		}	
	}
}

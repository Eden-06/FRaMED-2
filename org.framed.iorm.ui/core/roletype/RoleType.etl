import "../CardinalityParser.eol";

/*
 * The abstract rule for role types executes all actions done for all role types with and without 
 * attributes/operations.
 */
@abstract
rule RoleType
	transform s : source!Shape
	to t : target!RoleType {
		guard : s.getType==(source!Type#RoleType) 	
		
		//set the transformed target element to ensure the subrule work on the same target and only transform once
 		if(s.~transformed == null) {
	 		s.~transformed = t;
			//set name 
			s.~transformed.name = s.name;
			//only transform if the role type is in a compartment type
			if(s.getContainer().getParent().getType==(source!Type#CompartmentType)) {
				//get the crom equivalent to compartment type the role type is in
				var compartmentType = s.getContainer.getParent().equivalent();
				//check if a part with that role does not already is added to the compartment type
				var partAlreadyAdded = false;
				for(alreadyAddedPart : target!Part in compartmentType.getParts()) {
					if(alreadyAddedPart.role == s.~transformed) partAlreadyAdded = true;
				}
				if(not(partAlreadyAdded)) {
					//create a new part with the role
					var part = new target!Part;
					part.role = s.~transformed;
					part.whole = compartmentType;
					//add the part to the compartment type the role type 
					compartmentType.getParts().add(part);
		}	}	}
}
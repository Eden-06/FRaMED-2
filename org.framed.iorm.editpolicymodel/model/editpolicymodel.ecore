<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="Editpolicymodel" nsURI="http://framed/editpolicymodel" nsPrefix="Editpolicymodel">
  <eClassifiers xsi:type="ecore:EClass" name="Model">
    <eStructuralFeatures xsi:type="ecore:EReference" name="policies" upperBound="-1"
        eType="#//Policy" containment="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Policy">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="override" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EBooleanObject"
        defaultValueLiteral="false"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="action" eType="#//ActionEnum"
        defaultValueLiteral="Create"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="ActionType" eType="ecore:EEnum ../../org.framed.iorm.model/model/IORM.ecore#//Type"
        defaultValueLiteral="CompartmentType"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="featureRule" containment="true">
      <eGenericType eClassifier="#//AbstractRule">
        <eTypeArguments eClassifier="#//FeatureRule"/>
      </eGenericType>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="constraintRule" containment="true">
      <eGenericType eClassifier="#//AbstractRule">
        <eTypeArguments eClassifier="#//ConstraintRule"/>
      </eGenericType>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Contains" eSuperTypes="#//TypeArgumentRule"/>
  <eClassifiers xsi:type="ecore:EClass" name="IsStepIn" eSuperTypes="#//ConstraintRule"/>
  <eClassifiers xsi:type="ecore:EClass" name="IsTarget" eSuperTypes="#//TypeArgumentRule"/>
  <eClassifiers xsi:type="ecore:EClass" name="IsSource" eSuperTypes="#//TypeArgumentRule"/>
  <eClassifiers xsi:type="ecore:EClass" name="IsParent" eSuperTypes="#//TypeArgumentRule"/>
  <eClassifiers xsi:type="ecore:EEnum" name="ActionEnum">
    <eLiterals name="Create"/>
    <eLiterals name="Add" value="1"/>
    <eLiterals name="Start" value="2"/>
    <eLiterals name="Reconnect" value="3"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AbstractRule" abstract="true">
    <eTypeParameters name="T"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Rule" eSuperTypes="#//AbstractRule">
    <eTypeParameters name="T"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rule" containment="true">
      <eGenericType eTypeParameter="#//Rule/T"/>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FeatureRule" abstract="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IsFeature" eSuperTypes="#//FeatureRule">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" eType="ecore:EEnum ../../org.framed.iorm.model/model/IORM.ecore#//featuremodel/FeatureName"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ConstraintRule" abstract="true"/>
  <eClassifiers xsi:type="ecore:EClass" name="IsTargetType" eSuperTypes="#//TypeArgumentRule"/>
  <eClassifiers xsi:type="ecore:EClass" name="UnaryRule" abstract="true">
    <eTypeParameters name="T"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rule" containment="true">
      <eGenericType eClassifier="#//AbstractRule">
        <eTypeArguments eTypeParameter="#//UnaryRule/T"/>
      </eGenericType>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//AbstractRule">
      <eTypeArguments eTypeParameter="#//UnaryRule/T"/>
    </eGenericSuperTypes>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NotRule" eSuperTypes="#//UnaryRule"/>
  <eClassifiers xsi:type="ecore:EClass" name="AndRule" eSuperTypes="#//NaryRule"/>
  <eClassifiers xsi:type="ecore:EClass" name="BinaryRule" abstract="true" eSuperTypes="#//AbstractRule">
    <eTypeParameters name="T"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rightRule" containment="true">
      <eGenericType eClassifier="#//AbstractRule">
        <eTypeArguments eTypeParameter="#//BinaryRule/T"/>
      </eGenericType>
    </eStructuralFeatures>
    <eStructuralFeatures xsi:type="ecore:EReference" name="leftRule" containment="true">
      <eGenericType eClassifier="#//AbstractRule">
        <eTypeArguments eTypeParameter="#//BinaryRule/T"/>
      </eGenericType>
    </eStructuralFeatures>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="TrueRule" eSuperTypes="#//AbstractRule"/>
  <eClassifiers xsi:type="ecore:EClass" name="FalseRule" eSuperTypes="#//AbstractRule"/>
  <eClassifiers xsi:type="ecore:EClass" name="OrRule" eSuperTypes="#//NaryRule"/>
  <eClassifiers xsi:type="ecore:EClass" name="ImplicationRule" eSuperTypes="#//BinaryRule"/>
  <eClassifiers xsi:type="ecore:EClass" name="IsSourceType" eSuperTypes="#//TypeArgumentRule"/>
  <eClassifiers xsi:type="ecore:EClass" name="TypeArgumentRule" abstract="true" eSuperTypes="#//ConstraintRule">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" eType="ecore:EEnum ../../org.framed.iorm.model/model/IORM.ecore#//Type"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NaryRule" abstract="true">
    <eTypeParameters name="T"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rules" upperBound="-1"
        containment="true">
      <eGenericType eClassifier="#//AbstractRule">
        <eTypeArguments eTypeParameter="#//NaryRule/T"/>
      </eGenericType>
    </eStructuralFeatures>
    <eGenericSuperTypes eClassifier="#//AbstractRule">
      <eTypeArguments eTypeParameter="#//NaryRule/T"/>
    </eGenericSuperTypes>
  </eClassifiers>
</ecore:EPackage>

/**
 * generated by Xtext 2.13.0
 */
package org.framed.iorm.editpolicydsl.generator;

import java.io.ByteArrayOutputStream;
import java.util.Collections;
import java.util.Map;
import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;
import org.eclipse.emf.ecore.xmi.impl.XMIResourceFactoryImpl;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.Exceptions;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class DslGenerator extends AbstractGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    try {
      final Resource.Factory.Registry registry = Resource.Factory.Registry.INSTANCE;
      final Map<String, Object> extensionToFactoryMap = registry.getExtensionToFactoryMap();
      XMIResourceFactoryImpl _xMIResourceFactoryImpl = new XMIResourceFactoryImpl();
      extensionToFactoryMap.put("editpolicy", _xMIResourceFactoryImpl);
      final URI xmiUri = resource.getURI().trimFileExtension().appendFileExtension("editpolicy");
      final ResourceSetImpl outResourceSet = new ResourceSetImpl();
      final Resource outResource = outResourceSet.createResource(xmiUri);
      outResource.getContents().addAll(resource.getContents());
      final ByteArrayOutputStream outBuffer = new ByteArrayOutputStream();
      outResource.save(outBuffer, Collections.EMPTY_MAP);
      fsa.generateFile(xmiUri.lastSegment(), outBuffer.toString());
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }
}
